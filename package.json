{
  "name": "journey",
  "version": "0.0.1",
  "repository": "https://github.com/Light-houseAI/lighthouse-journey-canvas",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "scripts/dev.sh",
    "start": "concurrently \"pnpm --filter @journey/server start\" \"pnpm serve:ui\"",
    "serve:ui": "node -e \"const http = require('http'); const fs = require('fs'); const path = require('path'); const server = http.createServer((req, res) => { let filePath = path.join(__dirname, 'dist/ui', req.url === '/' ? 'index.html' : req.url); if (!fs.existsSync(filePath) || fs.lstatSync(filePath).isDirectory()) filePath = path.join(__dirname, 'dist/ui/index.html'); const ext = path.extname(filePath); const contentType = { '.html': 'text/html', '.js': 'application/javascript', '.css': 'text/css', '.json': 'application/json', '.png': 'image/png', '.jpg': 'image/jpg', '.gif': 'image/gif', '.svg': 'image/svg+xml', '.ico': 'image/x-icon' }[ext] || 'text/plain'; fs.readFile(filePath, (err, data) => { if (err) { res.writeHead(500); res.end('Error loading file'); } else { res.writeHead(200, { 'Content-Type': contentType }); res.end(data); } }); }); server.listen(3000, () => console.log('UI server running on http://localhost:3000'));\"",
    "build": "pnpm --color run -r --sort build",
    "lint": "pnpm --color run -r lint",
    "lint:fix": "pnpm --color run -r lint --fix",
    "test": "pnpm --color run -r test",
    "test:unit": "pnpm --color run -r test:unit",
    "test:changed": "nx affected -t test:unit --parallel",
    "test:changed:base": "nx affected -t test:unit --base=main --parallel",
    "test:changed:all": "nx affected -t test --base=main --parallel",
    "format": "prettier --write packages/*/{src,tests}/**/*.ts packages/*/{tailwind.config.js,postcss.config.cjs,vite.config.ts}",
    "check": "pnpm --color run -r check",
    "knip": "knip",
    "knip:production": "knip --production --strict"
  },
  "devDependencies": {
    "@eslint/js": "^9.28.0",
    "@nx/js": "^21.6.3",
    "@types/node": "^24.0.0",
    "concurrently": "^9.1.2",
    "eslint": "^9.28.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-unused-imports": "^4.2.0",
    "jiti": "2.4.2",
    "knip": "^5.63.1",
    "nx": "21.1.3",
    "prettier": "^3.5.3",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "syncpack": "14.0.0-alpha.13",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.44.1"
  }
}
